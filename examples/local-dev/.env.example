# CLS Backend Local Development Environment Configuration
# Copy this file to .env and customize the values for your setup

# ================================
# Database Configuration
# ================================

# PostgreSQL connection string
DATABASE_URL=postgres://cls_user:cls_password@localhost:5432/cls_backend?sslmode=disable

# Connection pool settings
DATABASE_MAX_OPEN_CONNS=25
DATABASE_MAX_IDLE_CONNS=5
DATABASE_CONN_MAX_LIFETIME=1h

# ================================
# Google Cloud Configuration
# ================================

# GCP project ID (use test-project for local emulator)
GOOGLE_CLOUD_PROJECT=test-project

# For local development with Pub/Sub emulator
PUBSUB_EMULATOR_HOST=localhost:8085

# For real GCP integration (comment out PUBSUB_EMULATOR_HOST above)
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account-key.json

# ================================
# Pub/Sub Configuration
# ================================

# Primary topic for cluster events (fan-out architecture)
PUBSUB_CLUSTER_EVENTS_TOPIC=cluster-events

# Publisher settings
PUBSUB_PUBLISH_TIMEOUT=10s
PUBSUB_PUBLISH_RETRY_ATTEMPTS=3

# ================================
# Server Configuration
# ================================

# HTTP server port
PORT=8080

# Environment (development, staging, production)
ENVIRONMENT=development

# Request and shutdown timeouts
REQUEST_TIMEOUT=30s
SHUTDOWN_TIMEOUT=30s

# ================================
# Authentication Configuration
# ================================

# Disable authentication for local development
DISABLE_AUTH=true

# Authentication headers (for production with external auth)
# AUTH_HEADER_USER_EMAIL=X-User-Email
# AUTH_HEADER_USER_ROLES=X-User-Roles

# ================================
# Logging Configuration
# ================================

# Log level (debug, info, warn, error)
LOG_LEVEL=debug

# Log format (json, console)
LOG_FORMAT=console

# Enable request logging
LOG_REQUESTS=true

# Log database queries (debug only)
LOG_DATABASE_QUERIES=false

# ================================
# Reconciliation Configuration
# ================================

# Enable reconciliation scheduler
RECONCILIATION_ENABLED=true

# How often to check for clusters needing reconciliation
RECONCILIATION_CHECK_INTERVAL=30s

# Maximum concurrent reconciliation operations
RECONCILIATION_MAX_CONCURRENT=10

# Default reconciliation interval (fallback only)
RECONCILIATION_DEFAULT_INTERVAL=5m

# ================================
# Metrics Configuration
# ================================

# Enable Prometheus metrics
METRICS_ENABLED=true

# Metrics server port
METRICS_PORT=8081

# Metrics path
METRICS_PATH=/metrics

# Enable pprof debugging endpoints
PPROF_ENABLED=true

# ================================
# Development Tools
# ================================

# Enable development features
DEV_MODE=true

# Hot reload (if using air or similar tool)
# HOT_RELOAD=true

# Debug server port (for delve or similar)
# DEBUG_PORT=2345

# ================================
# Optional: Real GCP Integration
# ================================

# Uncomment these for real GCP integration instead of emulator

# GCP project ID
# GOOGLE_CLOUD_PROJECT=your-real-gcp-project

# Service account key path
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/your-service-account-key.json

# Real database (Cloud SQL example)
# DATABASE_URL=postgres://user:pass@10.0.0.1:5432/cls_backend?sslmode=require

# ================================
# Testing Configuration
# ================================

# Test database URL (for running tests)
TEST_DATABASE_URL=postgres://cls_user:cls_password@localhost:5432/cls_test?sslmode=disable

# Test environment settings
TEST_DISABLE_AUTH=true
TEST_LOG_LEVEL=warn

# ================================
# Docker Compose Profiles
# ================================

# Uncomment to enable additional services
# COMPOSE_PROFILES=admin,monitoring

# ================================
# Performance Tuning
# ================================

# For high-load testing
# DATABASE_MAX_OPEN_CONNS=100
# DATABASE_MAX_IDLE_CONNS=25
# RECONCILIATION_MAX_CONCURRENT=100
# PUBSUB_MAX_OUTSTANDING_MESSAGES=5000

# ================================
# Security Configuration
# ================================

# CORS settings (if serving browser clients)
# CORS_ENABLED=true
# CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
# CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
# CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-User-Email

# TLS settings (for HTTPS)
# TLS_ENABLED=false
# TLS_CERT_FILE=/path/to/cert.pem
# TLS_KEY_FILE=/path/to/key.pem