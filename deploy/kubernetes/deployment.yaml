apiVersion: apps/v1
kind: Deployment
metadata:
  name: cls-backend
  namespace: cls-system
  labels:
    app.kubernetes.io/name: cls-backend
    app.kubernetes.io/component: api-server
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cls-backend
      app.kubernetes.io/component: api-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cls-backend
        app.kubernetes.io/component: api-server
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: cls-backend
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: cls-backend
        image: gcr.io/apahim-dev-1/cls-backend:error-handling-fix-20251017-122651
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 8081
          protocol: TCP
        env:
        # Load configuration from ConfigMap
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: cls-backend-config
              key: PORT
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: cls-backend-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: cls-backend-config
              key: LOG_LEVEL
        - name: LOG_FORMAT
          valueFrom:
            configMapKeyRef:
              name: cls-backend-config
              key: LOG_FORMAT
        - name: AGGREGATION_ENABLED
          valueFrom:
            configMapKeyRef:
              name: cls-backend-config
              key: AGGREGATION_ENABLED
        - name: AGGREGATION_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: cls-backend-config
              key: AGGREGATION_INTERVAL
        - name: METRICS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: cls-backend-config
              key: METRICS_ENABLED
        - name: METRICS_PORT
          valueFrom:
            configMapKeyRef:
              name: cls-backend-config
              key: METRICS_PORT
        - name: DISABLE_AUTH
          valueFrom:
            configMapKeyRef:
              name: cls-backend-config
              key: DISABLE_AUTH

        # Load secrets
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: DATABASE_URL
        - name: GOOGLE_CLOUD_PROJECT
          valueFrom:
            secretKeyRef:
              name: cls-backend-secrets
              key: GOOGLE_CLOUD_PROJECT
        # Workload Identity provides automatic GCP authentication

        # Pub/Sub configuration (simplified for fan-out architecture)
        - name: PUBSUB_CLUSTER_EVENTS_TOPIC
          valueFrom:
            configMapKeyRef:
              name: cls-backend-config
              key: PUBSUB_CLUSTER_EVENTS_TOPIC

        # No volume mounts needed - Workload Identity handles GCP authentication

        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"

        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL

      # No volumes needed - Workload Identity handles GCP authentication

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - cls-backend
              topologyKey: kubernetes.io/hostname